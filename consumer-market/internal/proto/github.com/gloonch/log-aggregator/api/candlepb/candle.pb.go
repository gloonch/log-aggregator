// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: candle.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CandleQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Timeframe     string                 `protobuf:"bytes,2,opt,name=timeframe,proto3" json:"timeframe,omitempty"`
	Start         int64                  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"` // unix timestamp
	End           int64                  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`     // unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CandleQuery) Reset() {
	*x = CandleQuery{}
	mi := &file_candle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CandleQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleQuery) ProtoMessage() {}

func (x *CandleQuery) ProtoReflect() protoreflect.Message {
	mi := &file_candle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleQuery.ProtoReflect.Descriptor instead.
func (*CandleQuery) Descriptor() ([]byte, []int) {
	return file_candle_proto_rawDescGZIP(), []int{0}
}

func (x *CandleQuery) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CandleQuery) GetTimeframe() string {
	if x != nil {
		return x.Timeframe
	}
	return ""
}

func (x *CandleQuery) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *CandleQuery) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type Candle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Open          float64                `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High          float64                `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low           float64                `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Close         float64                `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	StartTime     string                 `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Candle) Reset() {
	*x = Candle{}
	mi := &file_candle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_candle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_candle_proto_rawDescGZIP(), []int{1}
}

func (x *Candle) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Candle) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Candle) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Candle) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Candle) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Candle) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Candle) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type CandleList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Candles       []*Candle              `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CandleList) Reset() {
	*x = CandleList{}
	mi := &file_candle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CandleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleList) ProtoMessage() {}

func (x *CandleList) ProtoReflect() protoreflect.Message {
	mi := &file_candle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleList.ProtoReflect.Descriptor instead.
func (*CandleList) Descriptor() ([]byte, []int) {
	return file_candle_proto_rawDescGZIP(), []int{2}
}

func (x *CandleList) GetCandles() []*Candle {
	if x != nil {
		return x.Candles
	}
	return nil
}

var File_candle_proto protoreflect.FileDescriptor

const file_candle_proto_rawDesc = "" +
	"\n" +
	"\fcandle.proto\x12\x06candle\"k\n" +
	"\vCandleQuery\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1c\n" +
	"\ttimeframe\x18\x02 \x01(\tR\ttimeframe\x12\x14\n" +
	"\x05start\x18\x03 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x04 \x01(\x03R\x03end\"\xaa\x01\n" +
	"\x06Candle\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04open\x18\x02 \x01(\x01R\x04open\x12\x12\n" +
	"\x04high\x18\x03 \x01(\x01R\x04high\x12\x10\n" +
	"\x03low\x18\x04 \x01(\x01R\x03low\x12\x14\n" +
	"\x05close\x18\x05 \x01(\x01R\x05close\x12\x1d\n" +
	"\n" +
	"start_time\x18\x06 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\a \x01(\tR\aendTime\"6\n" +
	"\n" +
	"CandleList\x12(\n" +
	"\acandles\x18\x01 \x03(\v2\x0e.candle.CandleR\acandles2H\n" +
	"\rCandleService\x127\n" +
	"\n" +
	"GetCandles\x12\x13.candle.CandleQuery\x1a\x12.candle.CandleList\"\x00B3Z1github.com/gloonch/log-aggregator/api/candlepb;pbb\x06proto3"

var (
	file_candle_proto_rawDescOnce sync.Once
	file_candle_proto_rawDescData []byte
)

func file_candle_proto_rawDescGZIP() []byte {
	file_candle_proto_rawDescOnce.Do(func() {
		file_candle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_candle_proto_rawDesc), len(file_candle_proto_rawDesc)))
	})
	return file_candle_proto_rawDescData
}

var file_candle_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_candle_proto_goTypes = []any{
	(*CandleQuery)(nil), // 0: candle.CandleQuery
	(*Candle)(nil),      // 1: candle.Candle
	(*CandleList)(nil),  // 2: candle.CandleList
}
var file_candle_proto_depIdxs = []int32{
	1, // 0: candle.CandleList.candles:type_name -> candle.Candle
	0, // 1: candle.CandleService.GetCandles:input_type -> candle.CandleQuery
	2, // 2: candle.CandleService.GetCandles:output_type -> candle.CandleList
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_candle_proto_init() }
func file_candle_proto_init() {
	if File_candle_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_candle_proto_rawDesc), len(file_candle_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_candle_proto_goTypes,
		DependencyIndexes: file_candle_proto_depIdxs,
		MessageInfos:      file_candle_proto_msgTypes,
	}.Build()
	File_candle_proto = out.File
	file_candle_proto_goTypes = nil
	file_candle_proto_depIdxs = nil
}
